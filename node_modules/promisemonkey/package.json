{
  "name": "promisemonkey",
  "version": "0.1.4",
  "description": "Easily convert objects, functions and METHODs to the Q promise API",
  "main": "index.js",
  "scripts": {
    "test": "node_modules/.bin/mocha",
    "install": "node bin/install.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/eugeneware/promisemonkey"
  },
  "keywords": [
    "promise",
    "promises",
    "promisify",
    "q",
    "wrap"
  ],
  "author": {
    "name": "Eugene Ware",
    "email": "eugene@noblesamurai.com"
  },
  "license": "BSD",
  "devDependencies": {
    "chai": "~1.6.0",
    "mocha": "~1.9.0"
  },
  "dependencies": {
    "q-wrap": "0.0.1",
    "request": "~2.21.0"
  },
  "readme": "# promisemonkey\n\nEasily convert objects, functions and METHODs to the Q promise API\n\n# Installation\n\nYou can install promisemonkey through npm:\n```\n$ npm install promisemonkey\n```\n\n# Example\n\n## Access standard node APIs as promises\n\nYou can easily acccess the standard node APIs as promises:\n\n``` js\nvar promisify = require('promisemonkey');\nvar fs = promisify('fs');\nfs.stat(filePath)\n  .then(function (stats) {\n    expect(stats.size).to.be.above(0);\n  });\n```\n\n## Convert an object\n\nYou can pass through a object with methods and then an array of the method\nnames to promisify:\n\n``` js\nvar promisify = require('promisemonkey');\n\n// Pass through an object and array of method names\nvar fs = promisify.convert(require('fs'), ['readFile', 'stat']);\n\n// All the underlying functions should be accessible\nvar contents = fs.readFileSync(filePath).toString();\nexpect(contents.length).to.be.above(0);\n\n// You can then use the object methods which are now promisified\nfs.stat(filePath)\n  .then(function (stats) {\n    expect(stats.size).to.be.above(0);\n    return fs.readFile(filePath);\n  })\n  .then(function (contents) {\n    expect(contents.length).to.be.above(0);\n  })\n```\n\n## Convert a function\n\nAnd, of course you can promisify a plain old function\n\n``` js\nvar readFile = promisify.convert(require('fs').readFile);\nreadFile(filePath)\n  .then(function (contents) {\n    expect(contents.length).to.be.above(0);\n  })\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/eugeneware/promisemonkey/issues"
  },
  "_id": "promisemonkey@0.1.4",
  "dist": {
    "shasum": "4f5097f9f99b69cf811e576be8f8d5a1ea9b6cb2"
  },
  "_from": "promisemonkey@0.1.x",
  "_resolved": "https://registry.npmjs.org/promisemonkey/-/promisemonkey-0.1.4.tgz"
}
